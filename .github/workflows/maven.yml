# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    # If you need DB like MySQL then define service below.
    # Example for PostgreSQL and Redis can be found here:
    # https://github.com/actions/example-services/tree/master/.github/workflows
    services:
      keycloak:
        image: quay.io/keycloak/keycloak:15.0.2
        env:
            KEYCLOAK_USER: "marko"
            KEYCLOAK_PASSWORD: "marko"
            JAVA_OPTS_APPEND: "-Dkeycloak.profile.feature.upload_scripts=enabled"
        ports:
            - "8091:8080"
        volumes:
            - "/workspace/src/main/resources/keycloak:/src/main/resources/keycloak/"

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Setup Keycloak realm
        run: |
            docker exec -it keycloak sh -c 
            "/opt/jboss/keycloak/bin/kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user marko --password marko && 
            /opt/jboss/keycloak/bin/kcadm.sh create realms -s realm=testrealm -s enabled=true && 
            /opt/jboss/keycloak/bin/kcadm.sh create partialImport -r testrealm -s ifResourceExists=SKIP -o -f /src/main/resources/keycloak/realm.json"

      
    - name: Build with Maven
      run: mvn -B package --file pom.xml -pl !store-shared-module
